Subject Description Form 
 
Subject Code  COMP3233 
Subject Title  Software Testing and Quality Assurance 
Credit Value  3 
Level  4 
Pre-requisite /  Pre-requisite: COMP3211 
Co-requisite / 
Exclusion 
Objectives  The objectives of this subject are to: 
  present the concepts, techniques and metrics for quality assurance in software 
development; 
  develop a good understanding of issues, techniques and tools for software 
testing; and 
  enable students to gain a working knowledge of techniques for management of 
testing projects. 
Intended  Upon completion of the subject, students will be able to: 
Learning 
Outcomes  Professional/academic knowledge and skills 
(a)  appreciate the importance of software quality assurance; 
(b)  apply software testing techniques for information systems development; and 
(c)  know the inputs and deliverables of the testing process. 
Attributes for all-roundedness 
(d)  work together as a team; 
(e)  communicate in writing a technical document; and 
(f)  communicate effectively in English for general project presentation. 
Dec 2018  
Subject 
Topic 
Synopsis/ 
Indicative  1.  Software Quality Assurance 
Syllabus 
Quality factors; cost of quality. 
2.  Testing Fundamentals 
Understanding defects; testing concepts; levels of testing; test process 
3.  Code-based Techniques 
Control flow and data flow testing; mutation testing; domain testing; error-
oriented testing. 
4.  Specification-based Techniques 
Equivalence  partitioning;  boundary  value  testing;  state  machine  testing; 
program verification. 
5.  System Testing Techniques 
 Configuration testing; Compatibility testing; Usability testing; Web Testing; 
Security testing. 
6.  Inspection Technique 
Team and roles; process. 
7.  Test Tools 
Test  generation  tools;  Test  automation  tools;  code  coverage  tool;  defect 
tracking tools. 
8.  Measuring Software Quality 
Product metrics; process metrics; GQM; testing maturity model. 
 
Teaching/  The software testing techniques and quality assurance concepts will be covered in 
Learning  the lectures. In the tutorials, students will work on exercises and case studies on 
Methodology  software testing techniques. The tutorial will also cover common software testing 
tools (e.g. unit testing, coverage measurement, GUI testing, performance testing, 
security testing). 
Dec 2018  
Assessment 
Specific assessment  %  Intended subject learning outcomes to be 
Methods in 
methods/tasks  weighting  assessed (Please tick as appropriate) 
Alignment with 
Intended 
a  b  c  d  e  f 
Learning 
Outcomes 
Continuous             
Assessment 
1. Assignments             
55% 
2. Project             
3. Mid-Term             
Examination  45%             
Total   100%   
Explanation of the appropriateness of the assessment methods in assessing the 
intended learning outcomes: 
Students are required to work as a team on a project related to software testing and 
software quality assurance. This can be used to assess the students on their (b) 
understanding in software testing techniques for information systems development. 
Also, the students will be assessed on their ability to (d) work together as a team in 
preparing a report, (e) writing technical documents, and (f) communicate effectively 
in English for general project presentation. 
Assignment(s), mid-term(s) and the final examination will be used to assess the 
students on their academic knowledge and skills in software testing, which include 
the ability to (a) appreciate the importance of software quality assurance, (b) apply 
software testing techniques for information systems development and (c) knowledge 
in the inputs and deliverables of the testing process.
 
Student Study  Class contact: 
Effort Expected  
  Lecture  39 Hrs. 
  Tutorial  0 Hrs. 
Other student study effort: 
  Assignments and Projects  40 Hrs. 
  Review  30 Hrs. 
Total student study effort   109 Hrs. 
Reading List  Reference Books: 
and References 
1.  Patton, Ron, Software Testing, 2nd Edition, Sams Publishing, 2005. 
2.  Nguyen,  Hung  Q.,  Johnson,  Bob,  Hackett,  Michael  and  Johnson,  Robert, 
Testing Applications on the Web: Test Planning for Mobile and Internet-Based 
Systems, 2nd Edition, John Wiley, 2003. 
Dec 2018 3.  Craig,  Rick D. and Jaskiel, Stefan P., Systematic Software Testing, Artech 
House Publishers, 2002. 
4.  Godbole, Nina S., Software Quality Assurance: Principles And Practice, Alpha 
Science International Ltd., 2004. 
 
Dec 2018 